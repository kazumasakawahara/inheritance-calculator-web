# ===================================
# Backend Environment Variables
# ===================================

# Application Settings
APP_NAME="Inheritance Calculator API"
DEBUG=false

# Database (PostgreSQL)
DATABASE_URL="postgresql+asyncpg://user:password@localhost:5432/inheritance_db"
# Production example:
# DATABASE_URL="postgresql+asyncpg://prod_user:prod_pass@db-host:5432/inheritance_prod"

# Neo4j Graph Database
NEO4J_URI="bolt://localhost:7687"
NEO4J_USER="neo4j"
NEO4J_PASSWORD="your-neo4j-password"
# Production example:
# NEO4J_URI="bolt://neo4j-host:7687"
# NEO4J_USER="neo4j"
# NEO4J_PASSWORD="strong-production-password"

# Authentication & Security
SECRET_KEY="your-secret-key-CHANGE-THIS-IN-PRODUCTION-use-openssl-rand-hex-32"
ALGORITHM="HS256"
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Settings
# Comma-separated list of allowed origins
CORS_ORIGINS="http://localhost:3000"
# Production example:
# CORS_ORIGINS="https://yourdomain.com,https://www.yourdomain.com"

# ===================================
# Production Recommendations
# ===================================

# 1. Generate strong SECRET_KEY:
#    openssl rand -hex 32

# 2. Use environment-specific database URLs:
#    - Development: Local PostgreSQL
#    - Staging: Staging database server
#    - Production: Production database with connection pooling

# 3. Enable HTTPS only in production:
#    - Set up SSL/TLS certificates (Let's Encrypt)
#    - Force HTTPS redirects

# 4. Neo4j production settings:
#    - Use strong passwords
#    - Enable authentication
#    - Consider Neo4j Aura for managed hosting

# 5. Security best practices:
#    - Rotate SECRET_KEY periodically
#    - Use secrets management (AWS Secrets Manager, HashiCorp Vault)
#    - Never commit .env to version control
