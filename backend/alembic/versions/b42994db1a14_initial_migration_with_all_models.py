"""Initial migration with all models

Revision ID: b42994db1a14
Revises: 
Create Date: 2025-10-17 19:43:23.221431

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b42994db1a14'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'IN_PROGRESS', 'COMPLETED', 'ARCHIVED', name='casestatus'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('neo4j_graph_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cases_id'), 'cases', ['id'], unique=False)
    op.create_index(op.f('ix_cases_user_id'), 'cases', ['user_id'], unique=False)
    op.create_table('persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('case_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('death_date', sa.DateTime(), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('is_decedent', sa.Boolean(), nullable=False),
    sa.Column('is_spouse', sa.Boolean(), nullable=False),
    sa.Column('neo4j_node_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_persons_case_id'), 'persons', ['case_id'], unique=False)
    op.create_index(op.f('ix_persons_id'), 'persons', ['id'], unique=False)
    op.create_table('person_relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('case_id', sa.Integer(), nullable=False),
    sa.Column('from_person_id', sa.Integer(), nullable=False),
    sa.Column('to_person_id', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.Enum('CHILD_OF', 'SPOUSE_OF', 'SIBLING_OF', name='relationshiptype'), nullable=False),
    sa.Column('is_biological', sa.Boolean(), nullable=True),
    sa.Column('is_adopted', sa.Boolean(), nullable=True),
    sa.Column('blood_type', sa.String(length=20), nullable=True),
    sa.Column('neo4j_relationship_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_person_id'], ['persons.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_person_id'], ['persons.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_person_relationships_case_id'), 'person_relationships', ['case_id'], unique=False)
    op.create_index(op.f('ix_person_relationships_from_person_id'), 'person_relationships', ['from_person_id'], unique=False)
    op.create_index(op.f('ix_person_relationships_id'), 'person_relationships', ['id'], unique=False)
    op.create_index(op.f('ix_person_relationships_to_person_id'), 'person_relationships', ['to_person_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_person_relationships_to_person_id'), table_name='person_relationships')
    op.drop_index(op.f('ix_person_relationships_id'), table_name='person_relationships')
    op.drop_index(op.f('ix_person_relationships_from_person_id'), table_name='person_relationships')
    op.drop_index(op.f('ix_person_relationships_case_id'), table_name='person_relationships')
    op.drop_table('person_relationships')
    op.drop_index(op.f('ix_persons_id'), table_name='persons')
    op.drop_index(op.f('ix_persons_case_id'), table_name='persons')
    op.drop_table('persons')
    op.drop_index(op.f('ix_cases_user_id'), table_name='cases')
    op.drop_index(op.f('ix_cases_id'), table_name='cases')
    op.drop_table('cases')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
